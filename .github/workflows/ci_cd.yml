name: CI/CD for Terraform and Ansible

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Шаг 3: Переход в папку terraform
      - name: Change directory to terraform
        working-directory: ./terraform
        run: terraform init

      # Шаг 4: Планирование Terraform
      - name: Terraform Plan
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        working-directory: ./terraform
        run: terraform plan

      # Шаг 5: Применение Terraform
      - name: Terraform Apply
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        working-directory: ./terraform
        run: terraform apply -auto-approve

  ansible:
    name: Ansible Playbook
    needs: terraform
    runs-on: ubuntu-latest
    steps:
        - name: Install Terraform (Ansible step)
          run: |
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
            sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            sudo apt-get update && sudo apt-get install terraform

        - name: Clean known_hosts entry
          run: |
            ls -al
            if [ -d "./terraform" ]; then
             VM_IP=$(terraform -chdir=terraform output -raw vm_public_ip)
             if [ -n "$VM_IP" ]; then
               ssh-keygen -R "$VM_IP"
             else
               echo "No VM IP found!"
               exit 1
             fi
             else
               echo "Directory 'terraform' does not exist"
               exit 1
             fi

        - name: Disable SSH host key checking
          run: echo "export ANSIBLE_HOST_KEY_CHECKING=False" >> $GITHUB_ENV
      # Шаг 6: Клонирование репозитория
        - name: Checkout code
          uses: actions/checkout@v3

      # Шаг 7: Установка Ansible
        - name: Install Ansible
          run: |
           sudo apt update
           sudo apt install -y ansible

      # Шаг 8: Выполнение Ansible Playbook
        - name: Run Ansible Playbook
          run: |
           ansible-playbook ansible/playbook.yml -i ansible/inventory.ini




