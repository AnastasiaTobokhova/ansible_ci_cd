name: CI/CD for Terraform and Ansible

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Установка Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Шаг 3: Переход в папку terraform
      - name: Change directory to terraform
        working-directory: ./terraform
        run: terraform init

      # Шаг 4: Планирование Terraform
      - name: Terraform Plan
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        working-directory: ./terraform
        run: terraform plan

      # Шаг 5: Применение Terraform
      - name: Terraform Apply
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Get VM Public IP
        id: get_ip
        run: |
         VM_IP=$(terraform -chdir=terraform output -raw vm_public_ip)
         if [[ ! $VM_IP =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
           echo "Error: Invalid IP format - $VM_IP"
           exit 1
         fi
         echo "VM_IP=$VM_IP" >> $GITHUB_ENV
         echo "VM_IP=$VM_IP"


      - name: Debug VM IP
        run: echo "VM IP:${{ env.VM_IP }}"

      - name: Clean known_hosts entry
        run: |
         ssh-keygen -R ${{ env.VM_IP }} || true
         ssh-keyscan -H ${{ env.VM_IP }} >> ~/.ssh/known_hosts


 
  ansible:
    name: Ansible Playbook
    needs: terraform
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Install Terraform (Ansible step)
          run: |
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
            sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            sudo apt-get update && sudo apt-get install terraform
       
        - name: Check repository structure
          run: ls -al

        - name: Clean known_hosts entry
          run: |
            if [ -d "./terraform" ]; then 
              VM_IP=$(terraform -chdir=terraform output -raw vm_public_ip)
              mkdir -p ~/.ssh
              touch ~/.ssh/known_hosts
              ssh-keygen -R "$VM_IP"
            else
              echo "Directory 'terraform' does not exist"
              exit 1
            fi


        - name: Disable SSH host key checking
          run: echo "export ANSIBLE_HOST_KEY_CHECKING=False" >> $GITHUB_ENV
      # Шаг 6: Клонирование репозитория
        - name: Checkout code
          uses: actions/checkout@v3

      # Шаг 7: Установка Ansible
        - name: Install Ansible
          run: |
           sudo apt update
           sudo apt install -y ansible

        - name: Update Ansible Inventory
          run: echo "[webserver]\n${{ env.VM_IP }} ansible_user=anastasiatobohova ansible_ssh_private_key_file=~/.ssh/id_ed25519" > ansible/inventory.ini
           
        - name: Disable SSH host key checking
          run: |
            mkdir -p ~/.ssh
            echo -e "Host *\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
            chmod 600 ~/.ssh/config
            
        - name: Configure SSH for Ansible
          run: |
           mkdir -p ~/.ssh
           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
           chmod 600 ~/.ssh/id_ed25519
           ssh-keyscan -H 89.169.128.31 >> ~/.ssh/known_hosts
          shell: bash

      # Шаг 8: Выполнение Ansible Playbook
        - name: Run Ansible Playbook
          run: |
           ansible-playbook ansible/playbook.yml -i ansible/inventory.ini




